@use "sass:color";
@use "sass:map";
@use '../../../styles/variables' as v;
@use '../../../styles/components' as c;
@use '../../../styles/mixins' as m;

.filtro-container {
  margin-left: 1rem;
  margin-right: 1rem;
  width: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;

  .filters {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    width: 100%;
  }

  .filter-item {
    display: flex;
    flex-direction: column;

    .filter-label {
      margin-bottom: 4px;
      font-weight: bold;
    }

    .input {
      @extend %input-field;
      width: 100%;
      padding: 8px 12px;
      border-radius: 5px;
      box-sizing: border-box;
      min-width: 0;
      
      &.select {
        cursor: pointer;
        
        &:focus {
          outline: none;
          border-color: v.$color-primario;
          box-shadow: 0 0 0 0.2rem rgba(255, 217, 0, 0.25);
        }
      }
    }
  }

  .button-lupa {
    @extend .button-primary; 
    padding: 0.75rem 1.5rem;
    align-self: center;
    width: fit-content;
    margin-top: 0.5rem;
  }

  // Responsive breakpoints
  @media (max-width: 768px) {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
    
    .filters {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }

    .button-lupa {
      width: 100%;
    }
  }

  @media (max-width: 480px) {
    margin-left: 0.25rem;
    margin-right: 0.25rem;
    gap: 0.75rem;

    .filters {
      gap: 0.5rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .filters {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.25rem;
    }
  }

  @media (min-width: 1025px) {
    margin-left: 2rem;
    margin-right: 2rem;
    
    .filters {
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: 1.5rem;
    }
  }

  @media (min-width: 1200px) {
    .filters {
      grid-template-columns: repeat(4, 1fr);
      gap: 1.5rem;
    }
  }
}